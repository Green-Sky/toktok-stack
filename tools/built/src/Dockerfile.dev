# Dev container base image.
#
# Individual devs can create their own images based on this one. This image
# contains a few basic tools and has built and ran all the tests once, so the
# results are cached. This is the quickest way to get started with TokTok
# development.
FROM toxchat/toktok-stack:latest-fastbuild

USER root

# Install an SSH server so we can connect to our dev container.
RUN ["apk", "add",\
 "dumb-init",\
 "mandoc",\
 "man-pages",\
 "openrc",\
 "openssh-server",\
 "shadow",\
 "tor"]

# Install ibazel for quick rebuilds.
RUN wget -q https://github.com/bazelbuild/bazel-watcher/releases/download/v0.23.7/ibazel_linux_amd64 \
 && install -o root -g root -m 755 ibazel_linux_amd64 /usr/local/bin/ibazel \
 && rm -f ibazel_linux_amd64

# Install our wrapper for lhs support in stylish-haskell.
#RUN mv /usr/bin/stylish-haskell /usr/bin/stylish-haskell.distrib \
# && ln -s /src/workspace/ci-tools/bin/stylish-haskell-lhs /usr/bin/stylish-haskell

USER builder

RUN nix-channel --add https://github.com/NixOS/nixpkgs/archive/refs/tags/23.05.tar.gz nixpkgs \
 && nix-channel --add https://github.com/nix-community/home-manager/archive/release-23.05.tar.gz home-manager \
 && nix-channel --update \
 && nix-shell '<home-manager>' -A install

COPY tools/built/src/home.nix /home/builder/.config/home-manager/
RUN ["home-manager", "switch"]

# Prepare builder's home with toxcore's astylerc.
RUN ["ln", "-sf", "/src/workspace/c-toxcore/other/astyle/astylerc", "/home/builder/.astylerc"]

# Disable layering check for compdb generation.
COPY tools/built/src/bazel-nomodules /src/workspace/tools/built/src/
ENV BAZEL_COMPDB_BAZEL_PATH=bazel-nomodules

# For local development: the setup script might have changed and is an
# extension of the Dockerfile, so we copy it here. On CI builds, they are
# the same file.
COPY tools/built/src/setup-dev.sh /src/workspace/tools/built/src/
RUN ["/src/workspace/tools/built/src/setup-dev.sh"]

# Also for local development: add this file again, so local changes are
# reflected.
COPY tools/built/src/init.sh tools/built/src/setup-local.sh /src/workspace/tools/built/src/
CMD ["/src/workspace/tools/built/src/init.sh"]

RUN ["sudo", "usermod", "-s", "/home/builder/.nix-profile/bin/zsh", "builder"]

VOLUME [ "/sys/fs/cgroup" ]
EXPOSE 22/tcp

# vim:ft=dockerfile
