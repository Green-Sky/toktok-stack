# Bazel developer-specific config.
#
# Copy this file to .bazelrc.local and adjust to meet your needs.

# Note that bazel will still only run as many jobs as it can on your number of
# CPU cores. The number 16 here just means it will look ahead and schedule more
# jobs to make sure all cores are always busy. If you have more than 16 cores,
# you'll want to change this number to at least `$(($(nproc) + 4))`.
build --jobs=16

# You may set one "rbe", "gcc", or "clang" (unless you are on Windows) to
# enable additional warning flags specific to these compilers.
#
# "rbe" implies "clang" and is set by default, assuming you're using a dev
# container or have set up your local environment the same way. If you're not
# using a dev container, comment out "rbe" and pick one of the other two.
#
# For guidance on how the dev container environment is set up, see
# https://github.com/TokTok/dockerfiles/blob/master/buildfarm/bazel/Dockerfile
build --config=rbe
#build --config=clang
#build --config=gcc

# You may choose one of the possible sandboxing technologies.
#build --config=sandboxfs
#build --config=docker-sandbox

# You may use the remote cache. This is mostly only useful when building with
# docker-sandbox, as that way you'll be sharing build artifacts with the CI
# builds, speeding up your builds significantly.
#build --config=remote
#build --config=remote-exec

# Optionally enable *one* of the following configs. If none is enabled, we build
# in fastbuild mode (no optimisation, minimal debugging information).
#build --config=debug
#build --config=release

# Use this config to put tox into a test network that speaks an incompatible
# protocol (all packet ids are shifted).
#build --config=testnet

# Run with LLVM sanitizers.
#build --config=asan
#build --config=msan
#build --config=tsan
