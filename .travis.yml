---
language: cpp
compiler: clang
dist: xenial
os: linux

cache:
  directories:
    - $HOME/.cache/bazel/_bazel_$USER

before_cache:
  - OUTPUT_BASE=$(bazel info output_base)
  - rm -rf
    $HOME/.cache/bazel/_bazel_$USER/cache
    $HOME/.cache/bazel/_bazel_$USER/install
    $OUTPUT_BASE/action_cache/action_journal_*.blaze
    $OUTPUT_BASE/bazel-workers/worker-*.log
    $OUTPUT_BASE/command.log
    $OUTPUT_BASE/command.profile.gz
    $OUTPUT_BASE/execroot/toktok/bazel-out/stable-status.txt
    $OUTPUT_BASE/execroot/toktok/bazel-out/volatile-status.txt
    $OUTPUT_BASE/java.log*
    $OUTPUT_BASE/lock
    $OUTPUT_BASE/server

jobs:
  include:
    - env:
        - JOB=kythe
        # HEROKU_TOKEN=[secure]
        - secure: "O7YcH/TPq1RcDFGwqnfE5roq2Ch2AdQxymRHJDiApwTEZ6eOpJ8XadJjsWA2RgfrewCi/Oa5iHnJALfKoxPGxkHhFME5G2nY7X7h+ilscYh+z6ZHf2u8wjRakuK2l33fMCG3lc/c6vqBYVohq0d9zZIX8GxfK0RnE9mAADeEYhA2TMXo3mfoSZQPMysOunOmGbIbjBD/I1QQR/RzKDo0XiHkM896sONBK72RUbLRU1RVzSu6gfVZtrVIMxGlpPGMXptlTv1Si3ktANv+NUVcity0sHLyy6yLtozh9wAoZnBJRgezyVTO45A9Tigylr167st9MOSNAUGOAYsrwczhvp0P8fbdk/1YdkQ8Ouj2hcneJ469+XZ+pM5UcDCjxaHQQAw18Ww1bvn+vMXznSBkkvCqCGUXuqOX+joQ1OQ5h/5Led1jYt6aB7oxYMZt4oQLCXZKrl6AfcA8joq6e5TcgeK+h7fGfYSCdv5nkajs4wp1i0Q7f/fG7fq9fO8THOFSxH55GqlJAYxS2qaa7W57wM35m9YtITfwgyfgzPhgR3lOWjRHdc8MT2DNtDCkE4vlICm0F/az+3pdUtXHzN10B6v16+R6I5m7YUWsD8eoRW7Ss0d1FIVIjiS8MUuRlSNq5ERYBNDoYNQvLl7C0z/KD74TP4wTTcTEivfh5c2Hxvw="
      services: [docker]
      script:
        - make build-kythe
        - >
          if [ -n "$HEROKU_TOKEN" ]; then
            docker login --username=_ --password="$HEROKU_TOKEN" registry.heroku.com
            docker tag toxchat/kythe-serving:latest registry.heroku.com/csrch/web
            docker push registry.heroku.com/csrch/web
          fi
    - if: type IN (pull_request, api, cron)
      env: JOB=bazel-docker
      services: [docker]
      addons: &addons
        apt:
          packages:
            - libasound-dev
            - libqt5opengl5-dev
            - libqt5svg5-dev
            - libssl-dev
            - libx264-dev
            - python3.5-dev
            - qtmultimedia5-dev
            - qttools5-dev
            - qttools5-dev-tools
      before_install: source tools/setup-bazel
      install: tools/setup-ci
      script:
        - echo 'build --config=docker-sandbox' >> $HOME/.bazelrc
        - bazel build -k
          //c-toxcore/...
          //go-toxcore-c/...
          //py_toxcore_c/...
          //toxins/...
        - sha256sum -c tools/checksums/linux.sha256
    - if: type IN (pull_request, api, cron)
      env: JOB=bazel-local
      addons: *addons
      before_install: source tools/setup-bazel
      install: tools/setup-ci
      script:
        - OUTPUT_BASE=$(bazel info output_base)
        - (sleep 30m && kill -2 $(grep pid= "$OUTPUT_BASE/lock" | cut -f2 -d=)) &
        - bazel test -k
          --config=release
          //apidsl/...
          //cedar/...
          //ci-tools/...
          //c-toxcore/...
          //c-toxcore-hs/...
          //dockerfiles/...
          //echobot-jvm/...
          //go-toxcore-c/...
          //hs-cimple/...
          //hs-github-tools/...
          //hs-msgpack-binary/...
          //hs-msgpack-rpc-conduit/...
          //hs-msgpack-types/...
          //hs-schema/...
          //hs-tokstyle/...
          //hs-toxcore/...
          //hs-toxcore-c/...
          //js-toxcore-c/...
          //jtox/...
          //jvm-macros/...
          //jvm-sbt-plugins/...
          //jvm-toxcore-api/...
          //jvm-toxcore-c/...
          //py_toxcore_c/...
          //qtox/...
          //spec/...
          //streambot-jvm/...
          //third_party/...
          //tools/...
          //toxic/...
          //toxins/...
          //website/...

git:
  depth: 1
  submodules_depth: 5

branches:
  only:
    - master
